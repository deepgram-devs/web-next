---
import Icon from "../shared/components/general/Icon.astro";
import Link from "../shared/components/general/Link.astro";
let pathname = Astro.url.pathname;
const { navStructure, navTitle } = Astro.props;
// import SideNavList from "./SideNavList.astro";
---

<input type="checkbox" id="toggle-nav" class="hidden" />
<label for="toggle-nav" class="toggle-nav-label absolute z-[11] top-3"> </label>
<nav class="side-nav bg-cloud30 p-4 ">
	<h5 class="border-b border-b-cloud pb-2 text-base">{navTitle}</h5>
	<!-- <SideNavList navStructure={navStructure} /> -->
	<ul>
	{
		navStructure.map((nav) => {
			const navToTrimmed = nav.to.slice(0, -1);
			return (
				<li class={pathname.includes(nav.to) ? "active" : ""}>
					<div class="navlink-container ">
						{nav.depth === 2 ? (
							<Link href={`/api-reference/${nav.to}`} class={`list-link hover:text-iris text-sm my-2 pl-1 py-1 pr-3 text-darkCharcoal inline-flex leading-5 ${pathname.endsWith(nav.to) ? "font-semibold" : "text-darkCharcoal"}  ${pathname.endsWith(nav.to) && nav.children ? "border-l-4 border-meadow" : "" }`}>
								{nav.text}
							</Link>
						)
						: (<Link href={`/api-reference/${nav.to}`} class={`list-link hover:text-iris text-sm my-2 pl-4 pr-3 text-darkCharcoal  inline-flex leading-5 ${pathname.endsWith(nav.to) ? "font-semibold" : "text-darkCharcoal"}  ${pathname.endsWith(nav.to) && nav.children ? "border-l-4 border-meadow" : "" }`}>
							{nav.text}
						</Link>)
					}
					</div>
				</li>
			);
		})
	}
</ul>
</nav>

<style>
	.side-nav {
		@apply col-span-2 md:col-span-1 lg:col-span-3;
	}
	.side-nav ul {
		@apply ml-0;
	}
</style>