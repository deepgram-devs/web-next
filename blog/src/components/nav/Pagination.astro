---
import Icon from "../../shared/components/general/Icon.astro";
import Link from "../../shared/components/general/Link.astro";
const { page, slug } = Astro.props;

let pageStatuses = Array.from({ length: page.lastPage }, (v, i) => i + 1).map((i) => {
	var item = {
		pageNumber: i,
		isActive: page.currentPage == i,
		isDisabled: isDisabled(i),
	};
	return item;
});

function isDisabled(i) {
	if (page.totalPage <= 6) return false;
	if (i <= 2 || i >= page.totalPage - 1) return false;
	if (page.currentPage == i - 1 || page.currentPage == i || page.currentPage == i + 1) return false;
	return true;
}

pageStatuses[0].pageNumber = 0;
pageStatuses[pageStatuses.length - 1].isDisabled = false;
---

<nav class="flex w-full flex-col items-center my-28">
	<ul class="flex items-center justify-center">
		<li>
			<Link icon="chevron-left" class="stroke-2 text-cloud" fillCurrent href={page.url.prev === undefined ? null : `${page.url.prev}`} />
		</li>
		{
			pageStatuses.map((pageStatus, index) =>
				pageStatus.isActive ? (
					<li>
						<Link class="page text-darkCharcoal border-darkCharcoal  font-bold">{page.currentPage}</Link>
					</li>
				) : pageStatus.isDisabled && !pageStatuses[index - 1].isDisabled ? (
					<li>
						<Link class="page disabled:opacity-75">...</Link>
					</li>
				) : (
					!pageStatus.isDisabled && (
						<li>
							<Link class="page" href={`/${slug}/${pageStatus.pageNumber === 0 ? "" : pageStatus.pageNumber}`}>
								{pageStatus.pageNumber === 0 ? 1 : pageStatus.pageNumber}
							</Link>
						</li>
					)
				)
			)
		}
		<li>
			<Link icon="chevron-right" class="stroke-2 text-cloud" fillCurrent href={page.url.next === undefined ? null : `${page.url.next}`} />
		</li>
	</ul>
</nav>

<style>
	li a {
		@apply border-b-2 border-transparent px-4 py-2;
	}

	.page {
		@apply inline-flex flex-nowrap items-center;
		@apply text-cloud text-sm;
	}
</style>
