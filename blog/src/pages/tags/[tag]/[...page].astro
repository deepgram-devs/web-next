---
import PrimarySection from "../../../shared/components/layout/PrimarySection.astro";
import Layout from "../../../layouts/Default.astro";
import GeneralPostsPage from "../../../components/posts/GeneralPostsPage.astro";
import JsonLD from "../../../shared/components/meta/JsonLD.astro";

export async function getStaticPaths({ paginate }) {
	const allPosts = await Astro.glob("../../../content/blog/posts/**/*.md");
	const sortedPosts = allPosts.sort((a, b) => {
		const aDate = new Date(b.frontmatter.date);
		const bDate = new Date(a.frontmatter.date);
		return aDate.getTime() - bDate.getTime();
	});

	function getTags() {
		const tagsArray = [];
		sortedPosts.map((post) => {
			tagsArray.push(...post.frontmatter.tags);
		});
		const noDuplicateTags = [...new Set(tagsArray)];
		return noDuplicateTags;
	}

	const tags = getTags();

	return tags.map((tag) => {
		const filteredPosts = sortedPosts.filter((post) => post.frontmatter.tags.includes(tag));
		return paginate(filteredPosts, {
			params: { tag },
			pageSize: 12,
			props: { tag },
		});
	});
}

const { page, tag } = Astro.props;

// build json schema object
const schema = {
	"@context": "https://schema.org",
	"@type": "BreadcrumbList",
	itemListElement: [
		{
			"@type": "ListItem",
			position: 1,
			name: "Deepgram Home",
			item: "https://deepgram.com",
		},
		{
			"@type": "ListItem",
			position: 2,
			name: "Blog",
			item: Astro.url.origin,
		},
		{
			"@type": "ListItem",
			position: 3,
			name: "Tags",
			item: `${Astro.url.origin}/tags`,
		},
		{
			"@type": "ListItem",
			position: 4,
			name: tag,
		},
	],
};
---

<Layout>
	<JsonLD slot="json:ld" {schema} />

	<PrimarySection>
		<GeneralPostsPage slug={`tags/${tag}`} page={page} posts={page.data} link="/tags" linkText="All tags" subtitle={`All posts tagged with #${tag}`} />
	</PrimarySection>
</Layout>
