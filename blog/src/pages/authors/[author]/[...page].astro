---
import PrimarySection from "../../../shared/components/layout/PrimarySection.astro";
import Layout from "../../../layouts/Default.astro";
import AuthorPostsPage from "../../../components/authors/AuthorPostsPage.astro";
import ContrastSection from "../../../shared/components/decoration/ContrastSection.astro";
import AuthorHero from "../../../components/authors/AuthorHero.astro";

export async function getStaticPaths({ paginate }) {
	const authorFiles = import.meta.glob("../../../content/blog/authors/*.json");

	async function getAuthors() {
		let authors = [];
		for (const path in authorFiles) {
			const author = await authorFiles[path]();
			const slug = path.split("/").pop().replace(".json", " ").trim();
			authors.push({ ...(author as object), slug });
		}
		return authors;
	}

	const authors = await getAuthors();
	const allPosts = await Astro.glob("../../../content/blog/posts/**/index.md");
	const sortedPosts = allPosts.sort((a, b) => {
		const aDate = new Date(b.frontmatter.date);
		const bDate = new Date(a.frontmatter.date);
		return aDate.getTime() - bDate.getTime();
	});

	return authors.map((author) => {
		const posts = sortedPosts.filter((post) => {
			if (post.frontmatter.authors) {
				return post.frontmatter.authors.includes(author.slug);
			}

			return false;
		});

		return paginate(posts, {
			params: {
				author: author.slug,
			},
			pageSize: 20,
			props: {
				author,
			},
		});
	});
}

const { page, author } = Astro.props;
---

<Layout>
	<ContrastSection contrast="darkCharcoal" background="white" bottomDivider="eclipse-divider" class="-mb-32">
		<AuthorHero author={author} />
	</ContrastSection>
	<PrimarySection>
		<AuthorPostsPage slug={`authors/${author.slug}`} page={page} posts={page.data} link="/authors" linkText="All authors" subtitle={`All ${author.title} posts`} />
	</PrimarySection>
</Layout>
