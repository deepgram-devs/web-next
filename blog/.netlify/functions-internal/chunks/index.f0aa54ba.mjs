import { c as createAstro, a as createComponent, r as renderTemplate, b as renderHead } from '../entry.mjs';
import Slugger from 'github-slugger';
import '@astrojs/netlify/netlify-functions.js';
import 'preact';
import 'preact-render-to-string';
import 'vue';
import 'vue/server-renderer';
import 'html-escaper';
import 'node-html-parser';
import 'axios';
/* empty css                           *//* empty css                           *//* empty css                           *//* empty css                           *//* empty css                          */import 'clone-deep';
import 'slugify';
import 'shiki';
/* empty css                           */import '@astrojs/rss';
/* empty css                           */import 'mime';
import 'cookie';
import 'kleur/colors';
import 'string-width';
import 'path-browserify';
import 'path-to-regexp';

const metadata = { "headings": [{ "depth": 2, "slug": "before-you-start", "text": "Before You Start" }, { "depth": 2, "slug": "set-up-twilio-functions", "text": "Set Up Twilio Functions" }, { "depth": 2, "slug": "record-and-forward-inbound-calls", "text": "Record and Forward Inbound Calls" }, { "depth": 2, "slug": "transcribe-and-summarize-call", "text": "Transcribe and Summarize Call" }, { "depth": 2, "slug": "send-summary-messages", "text": "Send Summary Messages" }, { "depth": 2, "slug": "in-summary", "text": "In Summary" }], "source": "\nIn this tutorial, we'll use Twilio Functions and Deepgram's [summarize](https://developers.deepgram.com/documentation/features/summarize/) feature to send call summaries via SMS once a conversation has ended.\n\nUsers can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.\n\nWe've previously written a post on [transcribing phone calls with Twilio Functions](https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/). We'll run through all the steps here, but do take a look for more detail.\n\n## Before You Start\n\nYou will need a Deepgram API Key - [get one here](https://console.deepgram.com/signup?jump=keys). You will also need a [Twilio account](https://console.twilio.com/) and a phone number in your account with SMS and Voice capabilities. Finally, you'll need two phones to test your project - one to make the call and one to receive.\n\n## Set Up Twilio Functions\n\nInside the Twilio Console, head to **Developer Tools -> Functions & Assets** and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.\n\nIn the Dependencies section, add `@deepgram/sdk` (you can omit the version for the latest).\n\nIn the Environment Variables section, add a key called `DEEPGRAM_KEY` with the value of your API Key generated in your Deepgram console. Create a second key called `FORWARDING_NUMBER` with the value of your agent phone number with [E.164 formatting](https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers) like this: +14155552671.\n\n## Record and Forward Inbound Calls\n\nRename the `/welcome` function to `/inbound`. Replace the whole file with the following:\n\n```js\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/recordings'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n```\n\nWhen this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to `/recordings` (which will be created in the next section).\n\nSave the function, and click *Deploy All*. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the `/inbound` function path.\n\n![When a call comes in, use a Function. Default service with the /inbound function path.](https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png)\n\n## Transcribe and Summarize Call\n\nCreate a new function - `/transcribe`. Delete the boilerplate and set up the function with the following code:\n\n```js\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY)\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  // Further code here\n\n  return callback(null, true)\n}\n```\n\nThis code takes the `CallSid` and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called `caller`, and the number they called as `twilioNumber`. Now generate a transcription with Deepgram\u2019s Node.js SDK:\n\n```js\nconst transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\nconst { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\nconst { summaries } = results.channels[0].alternatives[0]\n```\n\n`summaries` is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:\n\n```js\nconst summary = summaries.map(s => s.summary).join('\\n\\n')\n```\n\n## Send Summary Messages\n\nNow that you have a summary of the call provided by Deepgram's [summarization](https://developers.deepgram.com/documentation/features/summarize/) feature, it's time to send it to both the caller and the agent. Just below `summary` add the following:\n\n```js\nfor(let number of [process.env.FORWARD_NUMBER, caller]) {\n  await twilioClient.messages.create({\n    body: summary,\n    to: number,\n    from: twilioNumber\n  })\n}\n```\n\nSave both files again and deploy all functions in your service. Call your Twilio number, pick it up on your 'agent device', speak, and hang up. You should receive a summary message a few seconds later.\n\n## In Summary\n\nGetting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They're super useful in understanding what was said and what needs to happen next.\n\nIf you have questions about anything in this post, we\u2019d love to hear from you. Head over to [our forum](https://github.com/orgs/deepgram/discussions/categories/q-a) and create a new discussion with your questions, or send us a tweet [@DeepgramAI](https://twitter.com/DeepgramAI)\n\nThe final code is as follows:\n\n```js\n// /inbound\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/transcribe'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n\n// /transcribe\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY, 'api.beta.deepgram.com')\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  const transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\n  const { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\n  const { summaries } = results.channels[0].alternatives[0]\n  const summary = summaries.map(s => s.summary).join('\\n\\n')\n\n  for(let number of [process.env.FORWARDING_NUMBER, caller]) {\n    await twilioClient.messages.create({\n      body: summary,\n      to: number,\n      from: twilioNumber\n    })\n  }\n\n  return callback(null, true)\n}\n```\n\n", "html": '<p>In this tutorial, we\u2019ll use Twilio Functions and Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarize</a> feature to send call summaries via SMS once a conversation has ended.</p>\n<p>Users can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.</p>\n<p>We\u2019ve previously written a post on <a href="https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/">transcribing phone calls with Twilio Functions</a>. We\u2019ll run through all the steps here, but do take a look for more detail.</p>\n<h2 id="before-you-start">Before You Start</h2>\n<p>You will need a Deepgram API Key - <a href="https://console.deepgram.com/signup?jump=keys">get one here</a>. You will also need a <a href="https://console.twilio.com/">Twilio account</a> and a phone number in your account with SMS and Voice capabilities. Finally, you\u2019ll need two phones to test your project - one to make the call and one to receive.</p>\n<h2 id="set-up-twilio-functions">Set Up Twilio Functions</h2>\n<p>Inside the Twilio Console, head to <strong>Developer Tools -> Functions & Assets</strong> and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.</p>\n<p>In the Dependencies section, add <code is:raw>@deepgram/sdk</code> (you can omit the version for the latest).</p>\n<p>In the Environment Variables section, add a key called <code is:raw>DEEPGRAM_KEY</code> with the value of your API Key generated in your Deepgram console. Create a second key called <code is:raw>FORWARDING_NUMBER</code> with the value of your agent phone number with <a href="https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers">E.164 formatting</a> like this: +14155552671.</p>\n<h2 id="record-and-forward-inbound-calls">Record and Forward Inbound Calls</h2>\n<p>Rename the <code is:raw>/welcome</code> function to <code is:raw>/inbound</code>. Replace the whole file with the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/recordings&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>When this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to <code is:raw>/recordings</code> (which will be created in the next section).</p>\n<p>Save the function, and click <em>Deploy All</em>. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the <code is:raw>/inbound</code> function path.</p>\n<p><img src="https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png" alt="When a call comes in, use a Function. Default service with the /inbound function path."></p>\n<h2 id="transcribe-and-summarize-call">Transcribe and Summarize Call</h2>\n<p>Create a new function - <code is:raw>/transcribe</code>. Delete the boilerplate and set up the function with the following code:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">// Further code here</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>This code takes the <code is:raw>CallSid</code> and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called <code is:raw>caller</code>, and the number they called as <code is:raw>twilioNumber</code>. Now generate a transcription with Deepgram\u2019s Node.js SDK:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span></code></pre>\n<p><code is:raw>summaries</code> is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span></code></pre>\n<h2 id="send-summary-messages">Send Summary Messages</h2>\n<p>Now that you have a summary of the call provided by Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarization</a> feature, it\u2019s time to send it to both the caller and the agent. Just below <code is:raw>summary</code> add the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARD_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">    to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">    from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>Save both files again and deploy all functions in your service. Call your Twilio number, pick it up on your \u2018agent device\u2019, speak, and hang up. You should receive a summary message a few seconds later.</p>\n<h2 id="in-summary">In Summary</h2>\n<p>Getting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They\u2019re super useful in understanding what was said and what needs to happen next.</p>\n<p>If you have questions about anything in this post, we\u2019d love to hear from you. Head over to <a href="https://github.com/orgs/deepgram/discussions/categories/q-a">our forum</a> and create a new discussion with your questions, or send us a tweet <a href="https://twitter.com/DeepgramAI">@DeepgramAI</a></p>\n<p>The final code is as follows:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #8B949E">// /inbound</span></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/transcribe&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// /transcribe</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;api.beta.deepgram.com&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">      body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">      to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">      from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">    })</span></span>\n<span class="line"><span style="color: #C9D1D9">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>' };
const frontmatter = { "title": "Automatically Transcribe, Summarize, and Send Phone Call Summaries", "description": "Learn how to use Twilio Functions and Deepgram's summarization feature to send all phone call participants a bite-sized version of what happened.", "date": "2022-10-06T19:43:14.093Z", "cover": "https://res.cloudinary.com/deepgram/image/upload/v1664560715/blog/automatically-transcribe-summarize-and-send-phone-call-summaries/2209-Automatically-Transcribe-Summarize-and-Send-Phone-Call-Summaries-blog_2x_wvgy7d.jpg", "authors": ["kevin-lewis"], "category": "tutorial", "tags": ["javascript", "twilio"], "shorturls": { "share": "https://dpgr.am/bd1239a", "twitter": "https://dpgr.am/0daa6ee", "linkedin": "https://dpgr.am/e0856ca", "reddit": "https://dpgr.am/1e08cde", "facebook": "https://dpgr.am/969a1cd" }, "astro": { "headings": [{ "depth": 2, "slug": "before-you-start", "text": "Before You Start" }, { "depth": 2, "slug": "set-up-twilio-functions", "text": "Set Up Twilio Functions" }, { "depth": 2, "slug": "record-and-forward-inbound-calls", "text": "Record and Forward Inbound Calls" }, { "depth": 2, "slug": "transcribe-and-summarize-call", "text": "Transcribe and Summarize Call" }, { "depth": 2, "slug": "send-summary-messages", "text": "Send Summary Messages" }, { "depth": 2, "slug": "in-summary", "text": "In Summary" }], "source": "\nIn this tutorial, we'll use Twilio Functions and Deepgram's [summarize](https://developers.deepgram.com/documentation/features/summarize/) feature to send call summaries via SMS once a conversation has ended.\n\nUsers can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.\n\nWe've previously written a post on [transcribing phone calls with Twilio Functions](https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/). We'll run through all the steps here, but do take a look for more detail.\n\n## Before You Start\n\nYou will need a Deepgram API Key - [get one here](https://console.deepgram.com/signup?jump=keys). You will also need a [Twilio account](https://console.twilio.com/) and a phone number in your account with SMS and Voice capabilities. Finally, you'll need two phones to test your project - one to make the call and one to receive.\n\n## Set Up Twilio Functions\n\nInside the Twilio Console, head to **Developer Tools -> Functions & Assets** and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.\n\nIn the Dependencies section, add `@deepgram/sdk` (you can omit the version for the latest).\n\nIn the Environment Variables section, add a key called `DEEPGRAM_KEY` with the value of your API Key generated in your Deepgram console. Create a second key called `FORWARDING_NUMBER` with the value of your agent phone number with [E.164 formatting](https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers) like this: +14155552671.\n\n## Record and Forward Inbound Calls\n\nRename the `/welcome` function to `/inbound`. Replace the whole file with the following:\n\n```js\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/recordings'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n```\n\nWhen this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to `/recordings` (which will be created in the next section).\n\nSave the function, and click *Deploy All*. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the `/inbound` function path.\n\n![When a call comes in, use a Function. Default service with the /inbound function path.](https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png)\n\n## Transcribe and Summarize Call\n\nCreate a new function - `/transcribe`. Delete the boilerplate and set up the function with the following code:\n\n```js\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY)\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  // Further code here\n\n  return callback(null, true)\n}\n```\n\nThis code takes the `CallSid` and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called `caller`, and the number they called as `twilioNumber`. Now generate a transcription with Deepgram\u2019s Node.js SDK:\n\n```js\nconst transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\nconst { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\nconst { summaries } = results.channels[0].alternatives[0]\n```\n\n`summaries` is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:\n\n```js\nconst summary = summaries.map(s => s.summary).join('\\n\\n')\n```\n\n## Send Summary Messages\n\nNow that you have a summary of the call provided by Deepgram's [summarization](https://developers.deepgram.com/documentation/features/summarize/) feature, it's time to send it to both the caller and the agent. Just below `summary` add the following:\n\n```js\nfor(let number of [process.env.FORWARD_NUMBER, caller]) {\n  await twilioClient.messages.create({\n    body: summary,\n    to: number,\n    from: twilioNumber\n  })\n}\n```\n\nSave both files again and deploy all functions in your service. Call your Twilio number, pick it up on your 'agent device', speak, and hang up. You should receive a summary message a few seconds later.\n\n## In Summary\n\nGetting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They're super useful in understanding what was said and what needs to happen next.\n\nIf you have questions about anything in this post, we\u2019d love to hear from you. Head over to [our forum](https://github.com/orgs/deepgram/discussions/categories/q-a) and create a new discussion with your questions, or send us a tweet [@DeepgramAI](https://twitter.com/DeepgramAI)\n\nThe final code is as follows:\n\n```js\n// /inbound\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/transcribe'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n\n// /transcribe\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY, 'api.beta.deepgram.com')\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  const transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\n  const { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\n  const { summaries } = results.channels[0].alternatives[0]\n  const summary = summaries.map(s => s.summary).join('\\n\\n')\n\n  for(let number of [process.env.FORWARDING_NUMBER, caller]) {\n    await twilioClient.messages.create({\n      body: summary,\n      to: number,\n      from: twilioNumber\n    })\n  }\n\n  return callback(null, true)\n}\n```\n\n", "html": '<p>In this tutorial, we\u2019ll use Twilio Functions and Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarize</a> feature to send call summaries via SMS once a conversation has ended.</p>\n<p>Users can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.</p>\n<p>We\u2019ve previously written a post on <a href="https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/">transcribing phone calls with Twilio Functions</a>. We\u2019ll run through all the steps here, but do take a look for more detail.</p>\n<h2 id="before-you-start">Before You Start</h2>\n<p>You will need a Deepgram API Key - <a href="https://console.deepgram.com/signup?jump=keys">get one here</a>. You will also need a <a href="https://console.twilio.com/">Twilio account</a> and a phone number in your account with SMS and Voice capabilities. Finally, you\u2019ll need two phones to test your project - one to make the call and one to receive.</p>\n<h2 id="set-up-twilio-functions">Set Up Twilio Functions</h2>\n<p>Inside the Twilio Console, head to <strong>Developer Tools -> Functions & Assets</strong> and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.</p>\n<p>In the Dependencies section, add <code is:raw>@deepgram/sdk</code> (you can omit the version for the latest).</p>\n<p>In the Environment Variables section, add a key called <code is:raw>DEEPGRAM_KEY</code> with the value of your API Key generated in your Deepgram console. Create a second key called <code is:raw>FORWARDING_NUMBER</code> with the value of your agent phone number with <a href="https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers">E.164 formatting</a> like this: +14155552671.</p>\n<h2 id="record-and-forward-inbound-calls">Record and Forward Inbound Calls</h2>\n<p>Rename the <code is:raw>/welcome</code> function to <code is:raw>/inbound</code>. Replace the whole file with the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/recordings&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>When this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to <code is:raw>/recordings</code> (which will be created in the next section).</p>\n<p>Save the function, and click <em>Deploy All</em>. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the <code is:raw>/inbound</code> function path.</p>\n<p><img src="https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png" alt="When a call comes in, use a Function. Default service with the /inbound function path."></p>\n<h2 id="transcribe-and-summarize-call">Transcribe and Summarize Call</h2>\n<p>Create a new function - <code is:raw>/transcribe</code>. Delete the boilerplate and set up the function with the following code:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">// Further code here</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>This code takes the <code is:raw>CallSid</code> and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called <code is:raw>caller</code>, and the number they called as <code is:raw>twilioNumber</code>. Now generate a transcription with Deepgram\u2019s Node.js SDK:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span></code></pre>\n<p><code is:raw>summaries</code> is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span></code></pre>\n<h2 id="send-summary-messages">Send Summary Messages</h2>\n<p>Now that you have a summary of the call provided by Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarization</a> feature, it\u2019s time to send it to both the caller and the agent. Just below <code is:raw>summary</code> add the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARD_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">    to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">    from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>Save both files again and deploy all functions in your service. Call your Twilio number, pick it up on your \u2018agent device\u2019, speak, and hang up. You should receive a summary message a few seconds later.</p>\n<h2 id="in-summary">In Summary</h2>\n<p>Getting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They\u2019re super useful in understanding what was said and what needs to happen next.</p>\n<p>If you have questions about anything in this post, we\u2019d love to hear from you. Head over to <a href="https://github.com/orgs/deepgram/discussions/categories/q-a">our forum</a> and create a new discussion with your questions, or send us a tweet <a href="https://twitter.com/DeepgramAI">@DeepgramAI</a></p>\n<p>The final code is as follows:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #8B949E">// /inbound</span></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/transcribe&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// /transcribe</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;api.beta.deepgram.com&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">      body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">      to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">      from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">    })</span></span>\n<span class="line"><span style="color: #C9D1D9">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>' }, "file": "/Users/sandrarodgers/web-next/blog/src/content/blog/posts/automatically-transcribe-summarize-and-send-phone-call-summaries/index.md" };
function rawContent() {
  return "\nIn this tutorial, we'll use Twilio Functions and Deepgram's [summarize](https://developers.deepgram.com/documentation/features/summarize/) feature to send call summaries via SMS once a conversation has ended.\n\nUsers can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.\n\nWe've previously written a post on [transcribing phone calls with Twilio Functions](https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/). We'll run through all the steps here, but do take a look for more detail.\n\n## Before You Start\n\nYou will need a Deepgram API Key - [get one here](https://console.deepgram.com/signup?jump=keys). You will also need a [Twilio account](https://console.twilio.com/) and a phone number in your account with SMS and Voice capabilities. Finally, you'll need two phones to test your project - one to make the call and one to receive.\n\n## Set Up Twilio Functions\n\nInside the Twilio Console, head to **Developer Tools -> Functions & Assets** and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.\n\nIn the Dependencies section, add `@deepgram/sdk` (you can omit the version for the latest).\n\nIn the Environment Variables section, add a key called `DEEPGRAM_KEY` with the value of your API Key generated in your Deepgram console. Create a second key called `FORWARDING_NUMBER` with the value of your agent phone number with [E.164 formatting](https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers) like this: +14155552671.\n\n## Record and Forward Inbound Calls\n\nRename the `/welcome` function to `/inbound`. Replace the whole file with the following:\n\n```js\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/recordings'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n```\n\nWhen this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to `/recordings` (which will be created in the next section).\n\nSave the function, and click *Deploy All*. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the `/inbound` function path.\n\n![When a call comes in, use a Function. Default service with the /inbound function path.](https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png)\n\n## Transcribe and Summarize Call\n\nCreate a new function - `/transcribe`. Delete the boilerplate and set up the function with the following code:\n\n```js\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY)\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  // Further code here\n\n  return callback(null, true)\n}\n```\n\nThis code takes the `CallSid` and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called `caller`, and the number they called as `twilioNumber`. Now generate a transcription with Deepgram\u2019s Node.js SDK:\n\n```js\nconst transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\nconst { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\nconst { summaries } = results.channels[0].alternatives[0]\n```\n\n`summaries` is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:\n\n```js\nconst summary = summaries.map(s => s.summary).join('\\n\\n')\n```\n\n## Send Summary Messages\n\nNow that you have a summary of the call provided by Deepgram's [summarization](https://developers.deepgram.com/documentation/features/summarize/) feature, it's time to send it to both the caller and the agent. Just below `summary` add the following:\n\n```js\nfor(let number of [process.env.FORWARD_NUMBER, caller]) {\n  await twilioClient.messages.create({\n    body: summary,\n    to: number,\n    from: twilioNumber\n  })\n}\n```\n\nSave both files again and deploy all functions in your service. Call your Twilio number, pick it up on your 'agent device', speak, and hang up. You should receive a summary message a few seconds later.\n\n## In Summary\n\nGetting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They're super useful in understanding what was said and what needs to happen next.\n\nIf you have questions about anything in this post, we\u2019d love to hear from you. Head over to [our forum](https://github.com/orgs/deepgram/discussions/categories/q-a) and create a new discussion with your questions, or send us a tweet [@DeepgramAI](https://twitter.com/DeepgramAI)\n\nThe final code is as follows:\n\n```js\n// /inbound\nexports.handler = function(context, event, callback) {\n  let twiml = new Twilio.twiml.VoiceResponse()\n  const dial = twiml.dial({\n    record: 'record-from-answer-dual',\n    recordingStatusCallback: '/transcribe'\n  })\n  dial.number(process.env.FORWARDING_NUMBER)\n  return callback(null, twiml)\n}\n\n// /transcribe\nconst { Deepgram } = require('@deepgram/sdk')\nconst deepgram = new Deepgram(process.env.DEEPGRAM_KEY, 'api.beta.deepgram.com')\n\nexports.handler = async function(context, event, callback) {\n  const { RecordingUrl, CallSid } = event\n  const twilioClient = context.getTwilioClient()\n  const { from: caller, to: twilioNumber } = await twilioClient.calls(CallSid).fetch()\n\n  const transcriptionFeatures = { punctuate: true, tier: 'enhanced', summarize: true }\n  const { results } = await deepgram.transcription.preRecorded({ url: RecordingUrl }, transcriptionFeatures)\n  const { summaries } = results.channels[0].alternatives[0]\n  const summary = summaries.map(s => s.summary).join('\\n\\n')\n\n  for(let number of [process.env.FORWARDING_NUMBER, caller]) {\n    await twilioClient.messages.create({\n      body: summary,\n      to: number,\n      from: twilioNumber\n    })\n  }\n\n  return callback(null, true)\n}\n```\n\n";
}
function compiledContent() {
  return '<p>In this tutorial, we\u2019ll use Twilio Functions and Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarize</a> feature to send call summaries via SMS once a conversation has ended.</p>\n<p>Users can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.</p>\n<p>We\u2019ve previously written a post on <a href="https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/">transcribing phone calls with Twilio Functions</a>. We\u2019ll run through all the steps here, but do take a look for more detail.</p>\n<h2 id="before-you-start">Before You Start</h2>\n<p>You will need a Deepgram API Key - <a href="https://console.deepgram.com/signup?jump=keys">get one here</a>. You will also need a <a href="https://console.twilio.com/">Twilio account</a> and a phone number in your account with SMS and Voice capabilities. Finally, you\u2019ll need two phones to test your project - one to make the call and one to receive.</p>\n<h2 id="set-up-twilio-functions">Set Up Twilio Functions</h2>\n<p>Inside the Twilio Console, head to <strong>Developer Tools -> Functions & Assets</strong> and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It\u2019s important that you create a new service here and not a standalone function.</p>\n<p>In the Dependencies section, add <code is:raw>@deepgram/sdk</code> (you can omit the version for the latest).</p>\n<p>In the Environment Variables section, add a key called <code is:raw>DEEPGRAM_KEY</code> with the value of your API Key generated in your Deepgram console. Create a second key called <code is:raw>FORWARDING_NUMBER</code> with the value of your agent phone number with <a href="https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers">E.164 formatting</a> like this: +14155552671.</p>\n<h2 id="record-and-forward-inbound-calls">Record and Forward Inbound Calls</h2>\n<p>Rename the <code is:raw>/welcome</code> function to <code is:raw>/inbound</code>. Replace the whole file with the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/recordings&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>When this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to <code is:raw>/recordings</code> (which will be created in the next section).</p>\n<p>Save the function, and click <em>Deploy All</em>. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the <code is:raw>/inbound</code> function path.</p>\n<p><img src="https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png" alt="When a call comes in, use a Function. Default service with the /inbound function path."></p>\n<h2 id="transcribe-and-summarize-call">Transcribe and Summarize Call</h2>\n<p>Create a new function - <code is:raw>/transcribe</code>. Delete the boilerplate and set up the function with the following code:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">// Further code here</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>This code takes the <code is:raw>CallSid</code> and looks up the call for further call information. The caller\u2019s phone number is now available in a variable called <code is:raw>caller</code>, and the number they called as <code is:raw>twilioNumber</code>. Now generate a transcription with Deepgram\u2019s Node.js SDK:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span></code></pre>\n<p><code is:raw>summaries</code> is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span></code></pre>\n<h2 id="send-summary-messages">Send Summary Messages</h2>\n<p>Now that you have a summary of the call provided by Deepgram\u2019s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarization</a> feature, it\u2019s time to send it to both the caller and the agent. Just below <code is:raw>summary</code> add the following:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARD_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">    to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">    from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>\n<p>Save both files again and deploy all functions in your service. Call your Twilio number, pick it up on your \u2018agent device\u2019, speak, and hang up. You should receive a summary message a few seconds later.</p>\n<h2 id="in-summary">In Summary</h2>\n<p>Getting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They\u2019re super useful in understanding what was said and what needs to happen next.</p>\n<p>If you have questions about anything in this post, we\u2019d love to hear from you. Head over to <a href="https://github.com/orgs/deepgram/discussions/categories/q-a">our forum</a> and create a new discussion with your questions, or send us a tweet <a href="https://twitter.com/DeepgramAI">@DeepgramAI</a></p>\n<p>The final code is as follows:</p>\n<pre is:raw class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #8B949E">// /inbound</span></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/transcribe&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  })</span></span>\n<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// /transcribe</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;api.beta.deepgram.com&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">      body: summary,</span></span>\n<span class="line"><span style="color: #C9D1D9">      to: number,</span></span>\n<span class="line"><span style="color: #C9D1D9">      from: twilioNumber</span></span>\n<span class="line"><span style="color: #C9D1D9">    })</span></span>\n<span class="line"><span style="color: #C9D1D9">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>';
}
const $$Astro = createAstro("/Users/sandrarodgers/web-next/blog/src/content/blog/posts/automatically-transcribe-summarize-and-send-phone-call-summaries/index.md", "", "file:///Users/sandrarodgers/web-next/blog/");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  new Slugger();
  return renderTemplate`<head>${renderHead($$result)}</head><p>In this tutorial, we’ll use Twilio Functions and Deepgram’s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarize</a> feature to send call summaries via SMS once a conversation has ended.</p>
<p>Users can call a Twilio phone number, which will be forwarded to your agent while recording. Once the call is completed, we will get a transcript and summary of the call using Deepgram. Finally, the summary will be sent to both the caller and the agent via SMS.</p>
<p>We’ve previously written a post on <a href="https://blog.deepgram.com/transcribe-phone-calls-with-twilio-functions-and-deepgram/">transcribing phone calls with Twilio Functions</a>. We’ll run through all the steps here, but do take a look for more detail.</p>
<h2 id="before-you-start">Before You Start</h2>
<p>You will need a Deepgram API Key - <a href="https://console.deepgram.com/signup?jump=keys">get one here</a>. You will also need a <a href="https://console.twilio.com/">Twilio account</a> and a phone number in your account with SMS and Voice capabilities. Finally, you’ll need two phones to test your project - one to make the call and one to receive.</p>
<h2 id="set-up-twilio-functions">Set Up Twilio Functions</h2>
<p>Inside the Twilio Console, head to <strong>Developer Tools -> Functions & Assets</strong> and create a new service. A service can contain multiple Twilio Functions and assets related to a single project. It’s important that you create a new service here and not a standalone function.</p>
<p>In the Dependencies section, add <code>@deepgram/sdk</code> (you can omit the version for the latest).</p>
<p>In the Environment Variables section, add a key called <code>DEEPGRAM_KEY</code> with the value of your API Key generated in your Deepgram console. Create a second key called <code>FORWARDING_NUMBER</code> with the value of your agent phone number with <a href="https://support.twilio.com/hc/en-us/articles/223183008-Formatting-International-Phone-Numbers">E.164 formatting</a> like this: +14155552671.</p>
<h2 id="record-and-forward-inbound-calls">Record and Forward Inbound Calls</h2>
<p>Rename the <code>/welcome</code> function to <code>/inbound</code>. Replace the whole file with the following:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>
<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>
<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/recordings&#39;</span></span>
<span class="line"><span style="color: #C9D1D9">  })</span></span>
<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>
<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>
<p>When this function receives incoming call data, it will forward it to your agent while recording it. Once completed, call data will be sent to <code>/recordings</code> (which will be created in the next section).</p>
<p>Save the function, and click <em>Deploy All</em>. Once deployed, this function is ready to be used. Go to your Twilio number settings, and when a call comes in, select Function. Select your service and the <code>/inbound</code> function path.</p>
<p><img src="https://res.cloudinary.com/deepgram/image/upload/v1663789484/blog/2022/09/automatically-transcribe-summarize-and-send-phone-call-summaries/set-inbound-endpoint_rw5v5z.png" alt="When a call comes in, use a Function. Default service with the /inbound function path."></p>
<h2 id="transcribe-and-summarize-call">Transcribe and Summarize Call</h2>
<p>Create a new function - <code>/transcribe</code>. Delete the boilerplate and set up the function with the following code:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">// Further code here</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>
<p>This code takes the <code>CallSid</code> and looks up the call for further call information. The caller’s phone number is now available in a variable called <code>caller</code>, and the number they called as <code>twilioNumber</code>. Now generate a transcription with Deepgram’s Node.js SDK:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>
<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>
<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span></code></pre>
<p><code>summaries</code> is an array of objects containing summary text and what time period it is summarizing. Add the following to turn it into one string that can be sent via SMS:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span></code></pre>
<h2 id="send-summary-messages">Send Summary Messages</h2>
<p>Now that you have a summary of the call provided by Deepgram’s <a href="https://developers.deepgram.com/documentation/features/summarize/">summarization</a> feature, it’s time to send it to both the caller and the agent. Just below <code>summary</code> add the following:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARD_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>
<span class="line"><span style="color: #C9D1D9">    body: summary,</span></span>
<span class="line"><span style="color: #C9D1D9">    to: number,</span></span>
<span class="line"><span style="color: #C9D1D9">    from: twilioNumber</span></span>
<span class="line"><span style="color: #C9D1D9">  })</span></span>
<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>
<p>Save both files again and deploy all functions in your service. Call your Twilio number, pick it up on your ‘agent device’, speak, and hang up. You should receive a summary message a few seconds later.</p>
<h2 id="in-summary">In Summary</h2>
<p>Getting high-quality summaries from your audio is as simple as adding one parameter in your Deepgram request. They’re super useful in understanding what was said and what needs to happen next.</p>
<p>If you have questions about anything in this post, we’d love to hear from you. Head over to <a href="https://github.com/orgs/deepgram/discussions/categories/q-a">our forum</a> and create a new discussion with your questions, or send us a tweet <a href="https://twitter.com/DeepgramAI">@DeepgramAI</a></p>
<p>The final code is as follows:</p>
<pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #8B949E">// /inbound</span></span>
<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> twiml </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> Twilio.twiml.</span><span style="color: #D2A8FF">VoiceResponse</span><span style="color: #C9D1D9">()</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">dial</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> twiml.</span><span style="color: #D2A8FF">dial</span><span style="color: #C9D1D9">({</span></span>
<span class="line"><span style="color: #C9D1D9">    record: </span><span style="color: #A5D6FF">&#39;record-from-answer-dual&#39;</span><span style="color: #C9D1D9">,</span></span>
<span class="line"><span style="color: #C9D1D9">    recordingStatusCallback: </span><span style="color: #A5D6FF">&#39;/transcribe&#39;</span></span>
<span class="line"><span style="color: #C9D1D9">  })</span></span>
<span class="line"><span style="color: #C9D1D9">  dial.</span><span style="color: #D2A8FF">number</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, twiml)</span></span>
<span class="line"><span style="color: #C9D1D9">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #8B949E">// /transcribe</span></span>
<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">Deepgram</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;@deepgram/sdk&#39;</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">deepgram</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">new</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">Deepgram</span><span style="color: #C9D1D9">(process.env.</span><span style="color: #79C0FF">DEEPGRAM_KEY</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;api.beta.deepgram.com&#39;</span><span style="color: #C9D1D9">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9">.</span><span style="color: #D2A8FF">handler</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">async</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">function</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">context</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">event</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">callback</span><span style="color: #C9D1D9">) {</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">RecordingUrl</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">CallSid</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> event</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">twilioClient</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> context.</span><span style="color: #D2A8FF">getTwilioClient</span><span style="color: #C9D1D9">()</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #FFA657">from</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">caller</span><span style="color: #C9D1D9">, </span><span style="color: #FFA657">to</span><span style="color: #C9D1D9">: </span><span style="color: #79C0FF">twilioNumber</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.</span><span style="color: #D2A8FF">calls</span><span style="color: #C9D1D9">(CallSid).</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">transcriptionFeatures</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> { punctuate: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">, tier: </span><span style="color: #A5D6FF">&#39;enhanced&#39;</span><span style="color: #C9D1D9">, summarize: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9"> }</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">results</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> deepgram.transcription.</span><span style="color: #D2A8FF">preRecorded</span><span style="color: #C9D1D9">({ url: RecordingUrl }, transcriptionFeatures)</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> { </span><span style="color: #79C0FF">summaries</span><span style="color: #C9D1D9"> } </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> results.channels[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">].alternatives[</span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">]</span></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">summary</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> summaries.</span><span style="color: #D2A8FF">map</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">s</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=&gt;</span><span style="color: #C9D1D9"> s.summary).</span><span style="color: #D2A8FF">join</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">&#39;</span><span style="color: #79C0FF">\\n\\n</span><span style="color: #A5D6FF">&#39;</span><span style="color: #C9D1D9">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">for</span><span style="color: #C9D1D9">(</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> number </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> [process.env.</span><span style="color: #79C0FF">FORWARDING_NUMBER</span><span style="color: #C9D1D9">, caller]) {</span></span>
<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #FF7B72">await</span><span style="color: #C9D1D9"> twilioClient.messages.</span><span style="color: #D2A8FF">create</span><span style="color: #C9D1D9">({</span></span>
<span class="line"><span style="color: #C9D1D9">      body: summary,</span></span>
<span class="line"><span style="color: #C9D1D9">      to: number,</span></span>
<span class="line"><span style="color: #C9D1D9">      from: twilioNumber</span></span>
<span class="line"><span style="color: #C9D1D9">    })</span></span>
<span class="line"><span style="color: #C9D1D9">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">callback</span><span style="color: #C9D1D9">(</span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">, </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">)</span></span>
<span class="line"><span style="color: #C9D1D9">}</span></span></code></pre>`;
}, "/Users/sandrarodgers/web-next/blog/src/content/blog/posts/automatically-transcribe-summarize-and-send-phone-call-summaries/index.md");

export { compiledContent, $$Index as default, frontmatter, metadata, rawContent };
