import { c as createAstro, a as createComponent, r as renderTemplate, b as renderHead } from '../entry.mjs';
import Slugger from 'github-slugger';
import '@astrojs/netlify/netlify-functions.js';
import 'preact';
import 'preact-render-to-string';
import 'vue';
import 'vue/server-renderer';
import 'html-escaper';
import 'node-html-parser';
import 'axios';
/* empty css                           *//* empty css                           *//* empty css                           */import '@storyblok/js';
/* empty css                          *//* empty css                              */import 'clone-deep';
import 'slugify';
import 'shiki';
/* empty css                           */import 'camelcase';
/* empty css                              */import '@astrojs/rss';
/* empty css                           */import 'mime';
import 'cookie';
import 'kleur/colors';
import 'string-width';
import 'path-browserify';
import 'path-to-regexp';

const metadata = { "headings": [], "source": "I've previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.\n\nToday, we're building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.\n\nYou can read the post now over on the [freeCodeCamp Blog](https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/).\n\nThe [final code is available on GitHub](https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions) if you want to jump straight in.\n\nIf you ever have any questions about this post, please feel free to reach out to us on Twitter [@DeepgramDevs](https://twitter.com/DeepgramDevs). We\u2019re happy to help!", "html": '<p>I\u2019ve previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.</p>\n<p>Today, we\u2019re building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.</p>\n<p>You can read the post now over on the <a href="https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/">freeCodeCamp Blog</a>.</p>\n<p>The <a href="https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions">final code is available on GitHub</a> if you want to jump straight in.</p>\n<p>If you ever have any questions about this post, please feel free to reach out to us on Twitter <a href="https://twitter.com/DeepgramDevs">@DeepgramDevs</a>. We\u2019re happy to help!</p>' };
const frontmatter = { "title": "How to Build a Podcast Player with Transcriptions using Vue and Supabase", "description": "In this post we will walk through setting up a Podcast Player app using Supabase and Vue 3, including getting transcriptions for the podcasts.", "date": "2022-02-28T00:00:00.000Z", "cover": "https://res.cloudinary.com/deepgram/image/upload/v1646691089/blog/2022/02/supabase-podcast-player-vue/Build-Podcast-Player-app-w-transcriptions-using-Vue-Supabase%402x.jpg", "authors": ["brian-barrow"], "category": "tutorial", "tags": ["supabase", "vuejs"], "seo": { "title": "How to Build a Podcast Player with Transcriptions using Vue and Supabase", "description": "In this post we will walk through setting up a Podcast Player app using Supabase and Vue 3, including getting transcriptions for the podcasts." }, "og": { "image": "https://res.cloudinary.com/deepgram/image/upload/v1661454000/blog/supabase-podcast-player-vue/ograph.png" }, "shorturls": { "share": "https://dpgr.am/fd6bd89", "twitter": "https://dpgr.am/09738d2", "linkedin": "https://dpgr.am/0125cde", "reddit": "https://dpgr.am/1d58a82", "facebook": "https://dpgr.am/1d718e0" }, "astro": { "headings": [], "source": "I've previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.\n\nToday, we're building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.\n\nYou can read the post now over on the [freeCodeCamp Blog](https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/).\n\nThe [final code is available on GitHub](https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions) if you want to jump straight in.\n\nIf you ever have any questions about this post, please feel free to reach out to us on Twitter [@DeepgramDevs](https://twitter.com/DeepgramDevs). We\u2019re happy to help!", "html": '<p>I\u2019ve previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.</p>\n<p>Today, we\u2019re building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.</p>\n<p>You can read the post now over on the <a href="https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/">freeCodeCamp Blog</a>.</p>\n<p>The <a href="https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions">final code is available on GitHub</a> if you want to jump straight in.</p>\n<p>If you ever have any questions about this post, please feel free to reach out to us on Twitter <a href="https://twitter.com/DeepgramDevs">@DeepgramDevs</a>. We\u2019re happy to help!</p>' }, "file": "/Users/sandrarodgers/web-next/blog/src/content/blog/posts/supabase-podcast-player-vue/index.md" };
function rawContent() {
  return "I've previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.\n\nToday, we're building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.\n\nYou can read the post now over on the [freeCodeCamp Blog](https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/).\n\nThe [final code is available on GitHub](https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions) if you want to jump straight in.\n\nIf you ever have any questions about this post, please feel free to reach out to us on Twitter [@DeepgramDevs](https://twitter.com/DeepgramDevs). We\u2019re happy to help!";
}
function compiledContent() {
  return '<p>I\u2019ve previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.</p>\n<p>Today, we\u2019re building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.</p>\n<p>You can read the post now over on the <a href="https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/">freeCodeCamp Blog</a>.</p>\n<p>The <a href="https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions">final code is available on GitHub</a> if you want to jump straight in.</p>\n<p>If you ever have any questions about this post, please feel free to reach out to us on Twitter <a href="https://twitter.com/DeepgramDevs">@DeepgramDevs</a>. We\u2019re happy to help!</p>';
}
const $$Astro = createAstro("/Users/sandrarodgers/web-next/blog/src/content/blog/posts/supabase-podcast-player-vue/index.md", "", "file:///Users/sandrarodgers/web-next/blog/");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  new Slugger();
  return renderTemplate`<head>${renderHead($$result)}</head><p>I’ve previously written two posts on Supabase - the first on getting started with their database, and the second on implementing authentication into your Vue 3 app.</p>
<p>Today, we’re building a Vue application which allows users to log in, subscribe to podcast feeds, and create a transcript for any episode with Deepgram.</p>
<p>You can read the post now over on the <a href="https://www.freecodecamp.org/news/build-a-podcast-player-with-transcriptions-using-vue-supabase/">freeCodeCamp Blog</a>.</p>
<p>The <a href="https://github.com/briancbarrow/vue-supabase-auth/tree/final-podcast-feed-transcriptions">final code is available on GitHub</a> if you want to jump straight in.</p>
<p>If you ever have any questions about this post, please feel free to reach out to us on Twitter <a href="https://twitter.com/DeepgramDevs">@DeepgramDevs</a>. We’re happy to help!</p>`;
}, "/Users/sandrarodgers/web-next/blog/src/content/blog/posts/supabase-podcast-player-vue/index.md");

export { compiledContent, $$Index as default, frontmatter, metadata, rawContent };
