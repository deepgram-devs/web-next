---
import Icon from "../general/Icon.astro";

const { name, primary } = Astro.props;
---

<div class="relative" x-data={`{ name: '${name}' }`}>
	<!-- Item active: "text-gray-900", Item inactive: "text-gray-500" -->
	<button
		x-on:click={`menu === name ? menu = null : menu = name`}
		type="button"
		class="group inline-flex items-center border-b-4 mt-1 py-4 border-transparent"
		x-bind:class="{'border-lightIris': menu === name, 'border-transparent': menu !== name }"
		aria-controls={`menu-${name}`}
		x-bind:aria-expanded="menu === name ? 'true' : 'false'"
	>
		<span class="text-bold">{name}</span>
		<Icon icon="angle-down" class="fill-gray-300 w-[1em] h-[1em] ml-2" x-bind:class="{ 'rotate-180' : menu === name }" />
	</button>

	<!--
    'Solutions' flyout menu, show/hide based on flyout menu state.

    Entering: "transition ease-out duration-200"
      From: "opacity-0 translate-y-1"
      To: "opacity-100 translate-y-0"
    Leaving: "transition ease-in duration-150"
      From: "opacity-100 translate-y-0"
      To: "opacity-0 translate-y-1"
  -->
	<div class="absolute z-10 -ml-20 mt-2 w-screen" style="display: none;" x-show="menu === name">
		<div class="overflow-hidden flex">
			{primary && (
				<div class="bg-ink p-5 sm:p-8">
					<slot name="primary" />
				</div>
			)}
			<div class="relative bg-darkCharcoal grid p-12 gap-12 lg:grid-cols-2">
				<slot />
			</div>
		</div>
	</div>
</div>
